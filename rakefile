mode = :debug

require 'albacore'
require 'fileutils'
require File.dirname(__FILE__) + "/build/versioning.rb"
require File.dirname(__FILE__) + "/build/nugets.rb"

properties = {
	:test_filter => "Puppy.Monitoring/**/bin/" + mode.to_s() + "/**/*.Tests.dll",
	:nuget_folder => "build/nuget",
	:nuget_executable => "build/tools/nuget/nuget.exe"
}


Albacore.configure do |config|
	config.msbuild.targets = [:clean, :build]
	config.msbuild.verbosity = "minimal"

	config.xunit.command = "build/tools/xunit/xunit.console.clr4.exe"
end


namespace :version do
	task :default => [:assembly_info] do

	end

	assemblyinfo :assembly_info => [:versioning] do |asm|
		  asm.product_name = "Puppy.Monitoring"
		  asm.description = "Puppy.Monitoring"
		  asm.version = ASSEMBLY_VERSION
		  asm.file_version = FORMAL_VERSION
		  asm.custom_attributes :AssemblyInformationalVersion => "#{BUILD_VERSION}",
				:ComVisibleAttribute => false,
			:CLSCompliantAttribute => false
		  asm.output_file = 'build/AssemblyInfo.cs'
		  asm.namespaces "System", "System.Reflection", "System.Runtime.InteropServices", "System.Security"
	end
end

task :installNuGetPackages do
  FileList["**/packages.config"].each { |filepath|
    sh "NuGet.exe i #{filepath} -o Solution/packages"
  }
end

namespace :build do
	msbuild :build => ['version:default'] do |msb|
		msb.properties = { :configuration => mode }
		msb.solution = "Puppy.Monitoring/Puppy.Monitoring.sln"
	end
end


namespace :nuget do
	task :default => ['version:default', :specs, :pack] do
	end

	task :pack do

		@nugets.each do |nuget|
			spec_file = File.join(Dir.pwd, properties[:nuget_folder], "#{nuget[:package_id]}.#{NUGET_VERSION}.nuspec")
			output_directory = File.join(Dir.pwd, properties[:nuget_folder])
			base_path = File.join(Dir.pwd, nuget[:base_folder], "bin", mode.to_s)
			nuget_parameters = "pack #{spec_file} -OutputDirectory #{output_directory} -BasePath #{base_path} -Version #{NUGET_VERSION} -Properties Configuration=Release"

			cmd = Exec.new
			cmd.command = properties[:nuget_executable]
			cmd.parameters = nuget_parameters
			cmd.execute
		end
	end

	task :specs do
		FileUtils.rm_rf properties[:nuget_folder] if File.exists?(properties[:nuget_folder])
		FileUtils.mkdir_p properties[:nuget_folder]

		@nugets.each do |nuget|
			nuspec = Nuspec.new
			nuspec.id = nuget[:package_id]
			nuspec.version = NUGET_VERSION
			nuspec.authors = nuget[:authors]
			nuspec.description = nuget[:description]
			nuspec.projectUrl = 'https://github.com/rivethead/Puppy.Monitoring'
			nuspec.language = "en-ZA"
			nuspec.licenseUrl = "http://www.apache.org/licenses/LICENSE-2.0"
			nuspec.requireLicenseAcceptance = "false"

			spec_file = File.join(Dir.pwd, properties[:nuget_folder], "#{nuget[:package_id]}.#{NUGET_VERSION}.nuspec")
			nuspec.output_file = spec_file

			nuget[:files].each do |f|
				nuspec.file f[0], f[1]
			end

			nuget[:dependencies].each do |d|
				nuspec.dependency d[0], d[1]
			end

			nuspec.execute
		end
	end
end

namespace :testing do
	task :unit_tests do
		Dir.glob(properties[:test_filter]).each do |test_assembly|
			xunit = XUnitTestRunner.new
			xunit.assembly = File.join(Dir.pwd, test_assembly)
			xunit.execute
		end
	end
end

task :switch_to_release do
	mode = :Release
end

task :default => [
	'build:build', 
	'testing:unit_tests'
	] do
end		

desc "Run debug build"	
task :debug => [:default] do end

desc "Run release build" 	
task :release => [:switch_to_release, :default] do end

desc "Release build with nuget packaging"
task :pack => ['nuget:default'] do end

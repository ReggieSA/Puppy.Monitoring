mode = :debug

require 'albacore'
require 'fileutils'
require File.dirname(__FILE__) + "/build/versioning.rb"

properties = {
	:test_filter => "Puppy.Monitoring/**/bin/" + mode.to_s() + "/**/*.Tests.dll",
}


Albacore.configure do |config|
	config.msbuild.targets = [:clean, :build]
	config.msbuild.verbosity = "minimal"

	config.xunit.command = "tools/xunit/xunit.console.clr4.exe"
end


namespace :version do
	task :default => [:assembly_info] do

	end

	assemblyinfo :assembly_info => [:versioning] do |asm|
		  asm.product_name = "Puppy.Monitoring"
		  asm.description = "Puppy.Monitoring"
		  asm.version = ASSEMBLY_VERSION
		  asm.file_version = FORMAL_VERSION
		  asm.custom_attributes :AssemblyInformationalVersion => "#{BUILD_VERSION}",
			:ComVisibleAttribute => false,
			:CLSCompliantAttribute => false
		  asm.output_file = 'build/AssemblyInfo.cs'
		  asm.namespaces "System", "System.Reflection", "System.Runtime.InteropServices", "System.Security"
	end
end

namespace :build do
	msbuild :build => ['version:default'] do |msb|
		msb.properties = { :configuration => mode }
		msb.solution = "Puppy.Monitoring/Puppy.Monitoring.sln"
	end
end

def add_files stage, what_dlls, nuspec
  [['net35', 'net-3.5'], ['net40', 'net-4.0']].each{|fw|
    takeFrom = File.join(stage, fw[1], what_dlls)
    Dir.glob(takeFrom).each do |f|
      nuspec.file(f.gsub("/", "\\"), "lib\\#{fw[0]}")
    end
  }
end

namespace :nuget do
	task :specs => ['version:default', 'puppy'] do
	end

	nuspec :puppy do
		nuspec.id = 'Puppy.Monitoring'
		nuspec.version = NUGET_VERSION
		nuspec.authors = 'rivethead_'
		nuspec.description = 'Puppy.Monitoring'
		nuspec.projectUrl = 'https://github.com/rivethead/Puppy.Monitoring'
		nuspec.language = "en-ZA"
		nuspec.licenseUrl = "http://www.apache.org/licenses/LICENSE-2.0"
		nuspec.requireLicenseAcceptance = "false"

		nuspec.file 'Puppy.Monitoring/Core/Puppy.Monitoring/bin/' + mode.to_s() + 'Puppy.Monitoring.dll', 'lib\net45'	
		nuspec.file 'Puppy.Monitoring/Core/Puppy.Monitoring/bin/' + mode.to_s() + 'Puppy.Monitoring.pdb', 'lib\net45'	
		nuspec.file 'Puppy.Monitoring/Core/Puppy.Monitoring/bin/' + mode.to_s() + '**/*.cs', 'src'	

		nuspec.dependency "Common.Logging", "[2.1.1]"
		nuspec.output_file = "build/nuspecs/MassTransit.nuspec"
	end

end

namespace :testing do
	task :unit_tests do
		Dir.glob(properties[:test_filter]).each do |test_assembly|
			xunit = XUnitTestRunner.new
			xunit.assembly = File.join(Dir.pwd, test_assembly)
			xunit.execute
		end
	end
end

task :switch_to_release do
	mode = :Release
end

task :default => [
	'build:build', 
	'testing:unit_tests'
	] do
end		

desc "Run debug build"	
task :debug => [:default] do end

desc "Run release build" 	
task :release => [:switch_to_release, :default] do end

desc "Release build with nuget packaging"
task :pack => ['nuget:specs'] do end
